Prerequisites
=============

A C++ compiler.

Boost C++ libraries >= 1.50.0
  http://www.boost.org/

libcdio and libiso9660 >= 2.0.0
  http://www.gnu.org/software/libcdio/

libvcdinfo >= 2.0.1
  http://www.gnu.org/software/vcdimager/


Installation
============

PSXImager can be compiled and installed in the usual way:

  $ ./bootstrap
  $ ./configure
  $ make
  [become root if necessary]
  # make install

Installation is not strictly necessary; the three binaries built in the
"src" directory are stand-alone programs.


Installation for Windows [Updated!]
========================

You can build PSXImager for Windows using MSYS2 environment.

  1. Download MSYS2 from the official website: https://www.msys2.org/
  2. After installation close the program as it will be the 64 bit by default!
  3. Open "mingw32.exe" in MSYS2 root folder.
  4. Install compiler and necessary packages:

     pacman -S --noconfirm autoconf automake make
     pacman -S --noconfirm mingw-w64-i686-toolchain mingw-w64-i686-boost \
         mingw-w64-i686-libcdio mingw-w64-i686-vcdimager

  5. Make a working directory

     mkdir psximager
     cd psximager
     
  6. We need to recompile and install a modified libcdio.
     Also get the latest psximager.

     wget -c https://ftp.gnu.org/gnu/libcdio/libcdio-2.1.0.tar.bz2
     tar -xf libcdio-2.1.0.tar.bz2

     wget https://github.com/Ripper55555/psximager/archive/refs/tags/psximager-v2.0.1Final.tar.gz
     tar -xf psximager-v2.0.1Final.tar.gz
     cp -R psximager-2.0.1Final/src/libcdio-2.1.0/* libcdio-2.1.0/

     cd libcdio-2.1.0
     ./configure MAKE=make
     make
     make install

     cd ../psximager-2.0.1Final/

  7. Run build commands:

     ./bootstrap
     ./configure --host=i686-w64-mingw32 --with-boost=/mingw32 \
         LDFLAGS="-s -static"
     make

The three binaries in "src" directory are stand-alone and can be run on
any Windows machine (no additional libraries needed).
